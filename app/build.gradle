apply plugin: 'com.android.application'
apply plugin: 'dagger.hilt.android.plugin'
android {
  compileSdkVersion 30

  defaultConfig {
    applicationId "today.learnslovak.first"
    minSdkVersion 24
    targetSdkVersion 30

    /// START-BUILD_VERSION_AUTOINCREMENT SCRIPT
    def versionPropsFile = file('version-build.txt')
    Properties versionProps = new Properties()

    if (versionPropsFile.canRead()) {
      versionProps.load(new FileInputStream(versionPropsFile))
    } else {
      versionProps['VERSION_BUILD'] = '0'
    }

    def versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1

    versionProps['VERSION_BUILD'] = versionBuild.toString()
    versionProps.store(versionPropsFile.newWriter(), null)
    /// END-BUILD_VERSION_AUTOINCREMENT SCRIPT
    versionCode = versionBuild
    versionName = "2.0." + versionBuild

    /// END_VERSION_AUTOINCREMENT SCRIPT

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"

    javaCompileOptions {
      annotationProcessorOptions {
        arguments += [
            "room.schemaLocation": "$projectDir/schemas".toString(),
            "room.incremental": "true",
            "room.expandProjection": "true"]
      }
    }

    allprojects {
      gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
          options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
      }
    }
  }

  buildTypes {
    debug {
      debuggable = true
      ext.alwaysUpdateBuildId = false

      // Enables code shrinking, obfuscation, and optimization for only
      // your project's release build type.
      minifyEnabled false

      // Enables resource shrinking, which is performed by the
      // Android Gradle plugin.
      shrinkResources false

      // Includes the default ProGuard rules files that are packaged with
      // the Android Gradle plugin. To learn more, go to the section about
      // R8 configuration files.
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      debuggable = false
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  buildFeatures {
    dataBinding = true
  }
  //solves JUnit5 compilation problems https://github.com/mannodermaus/android-junit5/wiki/Instrumentation-Tests-Setup
  packagingOptions {
    exclude "META-INF/LICENSE*"
  }

  testOptions {
    unitTests {
      includeAndroidResources = true

    }
  }

}

dependencies {

  implementation 'com.google.dagger:hilt-android:2.31.2-alpha'
  androidTestImplementation 'com.google.dagger:hilt-android-testing:2.31.2-alpha'
  annotationProcessor 'com.google.dagger:hilt-compiler:2.31.2-alpha'

  implementation 'androidx.preference:preference:1.1.1'

  implementation 'androidx.legacy:legacy-support-v4:1.0.0'
  implementation 'androidx.recyclerview:recyclerview:1.2.0-beta01'

  implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03'
  // When using Java.
  annotationProcessor 'androidx.hilt:hilt-compiler:1.0.0-alpha03'

  //it's important that lombok is higher than Room to work correctly
  compileOnly 'org.projectlombok:lombok:1.18.18'
  annotationProcessor 'org.projectlombok:lombok:1.18.18'

  implementation fileTree(dir: "libs", include: ["*.jar"])
  implementation 'androidx.appcompat:appcompat:1.2.0'
  implementation 'com.google.android.material:material:1.3.0'
  implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
  implementation 'androidx.navigation:navigation-fragment:2.3.3'
  implementation 'androidx.navigation:navigation-ui:2.3.3'
  implementation 'com.google.code.gson:gson:2.8.6'

  def room_version = '2.3.0-beta01'
  implementation "androidx.room:room-runtime:$room_version"
  annotationProcessor "androidx.room:room-compiler:$room_version"
  testImplementation 'org.robolectric:robolectric:4.5.1'
  // 5) Jupiter API & Test Runner, if you don't have it already
  testImplementation 'androidx.test:runner:1.3.0'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'

  // (Required) Writing and executing Unit Tests on the JUnit Platform
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'

  // (Optional) If you need "Parameterized Tests"
  testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.1'

  // 6) The instrumentation test companion libraries
  testImplementation 'de.mannodermaus.junit5:android-test-core:1.2.0'
  testRuntimeOnly 'de.mannodermaus.junit5:android-test-runner:1.2.0'
  //    apply plugin: 'de.mannodermaus.android-junit5'
  testImplementation 'com.google.truth:truth:1.1.2'
  testImplementation 'com.google.truth.extensions:truth-java8-extension:1.1.2'
  androidTestImplementation 'com.google.truth:truth:1.1.2'
  androidTestImplementation 'com.google.truth.extensions:truth-java8-extension:1.1.2'

  //testImplementation "org.mockito:mockito-core:3.3.3"


  // (Required) Writing and executing Unit Tests on the JUnit Platform
  androidTestRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'

  androidTestImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
  //androidTestImplementation 'org.junit.vintage:junit-vintage-engine:5.7.0'




  // (Optional) If you need "Parameterized Tests"
  androidTestImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.1'

  //androidTestImplementation "org.mockito:mockito-core:3.3.3"
  /*
  // https://mvnrepository.com/artifact/org.junit.platform/junit-platform-surefire-provider
      androidTestImplementation group: 'org.junit.platform', name: 'junit-platform-surefire-provider', version: '1.3.2'
  */

  androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
  androidTestImplementation 'androidx.test.espresso:espresso-web:3.3.0'
  androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'
  androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0'

  // https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter
  androidTestImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.5.11'
  androidTestImplementation 'org.mockito:mockito-android:2.25.0'
  testImplementation 'org.mockito:mockito-core:3.5.11'
  testImplementation 'org.mockito:mockito-junit-jupiter:3.5.11'

  androidTestImplementation "androidx.test:runner:1.3.0"
  androidTestImplementation 'androidx.test:rules:1.3.0'
  androidTestImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
  androidTestImplementation 'de.mannodermaus.junit5:android-test-core:1.2.0'
  androidTestRuntimeOnly 'de.mannodermaus.junit5:android-test-runner:1.2.0'

  androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'


  //https://github.com/mannodermaus/android-junit5/wiki/Instrumentation-Tests-Setup

  // debugImplementation because LeakCanary should only run in debug builds.
  debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.5'

  implementation 'com.jakewharton.timber:timber:4.7.1'

  implementation 'com.squareup.retrofit2:retrofit:2.9.0'
  implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
}